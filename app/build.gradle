plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdkVersion 33
    buildToolsVersion "30.0.3"

//    configurations {
//        cleanedAnnotations
//        implementation.exclude group: 'org.jetbrains' , module:'annotations'
//        implementation.exclude group: 'com.intellij' , module:'annotations'
//    }
    viewBinding {
        enabled = true
    }

    buildFeatures {
        dataBinding = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }

    defaultConfig {
        applicationId "com.soul.gpstest"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'

//    implementation 'androidx.appcompat:appcompat:1.6.1'
//    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'
    implementation 'androidx.activity:activity-ktx:1.5.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    implementation 'com.airbnb.android:lottie:3.4.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
//    implementation "androidx.activity:activity-ktx:1.2.3-alpha03"
//    implementation 'androidx.fragment:fragment-ktx:1.2.0-alpha03'
    implementation 'io.reactivex:rxjava:1.0.14'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.20'
    implementation 'io.reactivex:rxandroid:1.0.1'
//    implementation 'com.apkfuns.logutils:library:1.7.5'
    implementation 'com.apkfuns.log2file:log2file:1.3.1'
    implementation 'com.blankj:utilcode:1.30.7'
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.core:core:1.5.0-alpha05'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'  // For Android Support Library
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    // For androidx
    implementation 'io.reactivex.rxjava3:rxjava:3.0.4'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'com.github.tbruyelle:rxpermissions:0.12'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.alibaba:arouter-api:1.5.2'
//    kapt 'com.alibaba:arouter-compiler:1.5.2'
    implementation 'com.google.auto.service:auto-service:1.1.1'
    annotationProcessor 'com.google.auto.service:auto-service:1.1.1'
    implementation 'com.google.auto.service:auto-service-annotations:1.1.1'
    implementation 'com.squareup:javapoet:1.12.1'
    annotationProcessor 'org.apache.logging.log4j:log4j-core:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'

//    implementation 'com.github.EspoirX:StarrySky:v2.6.3'
//    implementation 'com.google.android.exoplayer:exoplayer-core:2.12.0'
//    implementation project(':starrysky')
    implementation project(':BluetoothSdk')
    implementation project(':ServiceApi')
    implementation project(':ServiceImpl')
    annotationProcessor project(':ServiceAnnotationProcessor')
    implementation project(':ServiceAnnotation')
    implementation project(':ServiceAnnotationRuntime')
}